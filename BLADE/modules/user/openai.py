from pyrogram import *
from pyrogram.types import *
from pyrogram import Client as kaz
from pyrogram.errors import MessageNotModified
from BLADE.helpers.basic import *
from BLADE.helpers.adminHelpers import DEVS
from config import *
from config import CMD_HANDLER
from BLADE.utils import *
from urllib.parse import quote

import requests
import os
import json
import random

from .help import *

@Client.on_message(filters.command("ai", ".") & filters.me)
async def openai(client: Client, message: Message):
    if len(message.command) == 1:
        return await message.reply(f"Ketik <code>.{message.command[0]} [question]</code> Questions for use OpenAI")
    
    question = message.text.split(" ", maxsplit=1)[1]
    
    headers = {
        "Content-Type": "application/json",
        "Authorization": f"Bearer {OPENAI_API_KEY}",
    }

    url = f"https://api.ajinkya.link/gpt.php?question={question}"
    
    msg = await message.reply("`Be patient..")
    
    try:
        response = requests.get(url).json()
        await msg.edit(response["answer"])
    except MessageNotModified:
        pass
    except Exception:
        await msg.edit("S·¥è Ä Ä è C ú·¥Ä·¥õ G·¥ò·¥õ …™s ·¥Ä·¥õ  Ä·¥ás·¥õ ·¥Ñ·¥ú Ä Ä·¥á…¥·¥õ ü è ·¥Ö·¥è  è·¥è·¥ú Ä ·¥°·¥è Ä·¥ã  ô è  è·¥è·¥ú Ä s·¥á ü“ì")

add_command_help(
    "‚Ä¢‚îÄ‚ïº‚Éùñ†Å ·¥è·¥ò·¥á…¥·¥Ä…™",
    [
        ["ai", "T·¥è AÍú±·¥ã S·¥è·¥ç·¥á·¥õ ú…™…¥…¢ T·¥è C ú·¥Ä·¥õ G·¥ò·¥õ"],
    ],
)
